const sampleInsertQueries = [
    "INSERT INTO patient(name, dateOfBirth) VALUES('Sara Brown', '1990-01-01')",
    "INSERT INTO patient(name, dateOfBirth) VALUES('John Smith', '1992-01-01')",
    "INSERT INTO patient(name, dateOfBirth) VALUES('Jack Ma', '1992-01-01')",
    "INSERT INTO patient(name, dateOfBirth) VALUES('Elon Musk', '1993-01-01')",
];

const GET_FOR_SELECT = "https://king-prawn-app-7exk8.ondigitalocean.app/COMP4537/labs/5/api/v1/sql?query=";
const POST_FOR_INSERT = "https://king-prawn-app-7exk8.ondigitalocean.app/COMP4537/labs/5/api/v1/sql";

class DBQueryer {
    static checkQuery() {
        let query = document.getElementById("query").value;
        if (query.toLowerCase().includes("SELECT") && !query.toLowerCase().includes("INSERT")) {
            DBQueryer.#selectQuery(query);
        } else if (!query.toLowerCase().includes("SELECT") && query.toLowerCase().includes("INSERT")) {
            DBQueryer.#insertQuery(query);
        } else {
            document.getElementById("response").innerHTML = invalidQueryMsg;
        }
    }

    static async #selectQuery(query) {
        let dbResObj = {};
        await fetch(`${GET_FOR_SELECT}${query}`, {
            method: "GET"
        })
            .then(response => {
                // console.log(response + "\n");
                dbResObj.statusCode = response.status;
                return response.json();
            })
            .then(data => {
                dbResObj.data = data;
            })
            .catch((error) => {
                console.error('Error: ', error);
            });
        Renderer.renderResponseGet(dbResObj.data);
    }

    static async #insertQuery(query) {

    }

    static async buttonClick() {
        let dbResObj = {};
        await fetch(POST_FOR_INSERT, {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json',
            },
            body: JSON.stringify({ sampleQueries: sampleInsertQueries })
        })
            .then(response => {
                dbResObj.statusCode = response.status
                return response;
            })
            .then(data => {
                dbResObj.data = data
            })
            .catch((error) => {
                console.error('Error: ', error);
            });
    }
}

class Renderer {
    static renderResponseGet(dbResArray) {
        console.log(dbResArray);
        let responseDiv = document.getElementById("response");
        responseDiv.innerHTML = `${dbResMsg}<br><br>`;

        // foreach loop generated by chatgpt and modified
        dbResArray.forEach((queryRow) => {
            console.log(queryRow);

            //create a p element and iterates through the keys of the row object to display the id, name and/or bday
            let p = document.createElement("p");
            Object.keys(queryRow).forEach(key => {
                p.insertAdjacentHTML("beforeend", `${key}: ${queryRow[key]}<br>`);
            })
            responseDiv.insertAdjacentElement("beforeend", p)
        });
    }

    //this is for the INSERT queries
    static renderResponsePost() {

    }

    static #createRowDiv() {

    }
}