class Message {
    //will contain message, MessageBox, and RemoveButton

    //could store just the message strings inside the localStorage
    //then give each of the strings their respective text box, remove button and edit button
}

class MessageBox {
    //will create a text box that gets the message stored in local 
    //storage and populates the text box with that message
    
    #msg = ""
    #inputElem = document.createElement("input")
    
    constructor() {
        this.#inputElem.innerHTML = this.#msg
        document.getElementById("writerNotes").insertAdjacentElement("afterbegin", this.#inputElem)
    }

    getMsgFromLocalMem() {

    }

    setMsg() {

    }
}

class RemoveButton {
    //creates a remove button and holds remove logic
}

class MessageManager {
    //manages what messages there are by using local storage
    //will store array of message objects and update them

    loadNotes() {
        document.getElementById("write").addEventListener("click", () => {
            
        })
    }
}

document.getElementById("write").addEventListener("click", () => {
    //create new note
    createNote()
})

//create document.querySelector to get all the buttons

function createNote() {

}

//generated by chat gpt and modified
function updateLocalStorage() {
    //update the local storage

    setInterval(() => {
        // updateTime()-
        document.getElementById("time").innerHTML = new Date().toLocaleTimeString()
    }, 2000)
}
updateLocalStorage()

//decide whether to store just msg onto local storage or all components to local storage